nMv = n-v
scans = 190
b <- rep(0, scans) 
for (k in 1:scans){
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
plot(b, xlab="k scans", ylab="attacker success")
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 200
b <- rep(0, scans) 
for (k in 1:scans){
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
plot(b, xlab="k scans", ylab="attacker success")
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 200
b <- rep(0, scans) 
for (k in 1:scans){
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
plot(b, xlab="k scans", ylab="attacker success")
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
b <- rep(0, scans) 
for (k in 1:scans){
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
plot(b, xlab="k scans", ylab="attacker success")
load("D:\\userdata\\Desktop\\CSC 790 Security Seminar\\project 1\\1.2")
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
b <- rep(0, scans) 
for (k in 1:scans){
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
png(filename="D:\userdata\Desktop\CSC 790 Security Seminar\project 1\1.2.png")
plot(b, xlab="k scans", ylab="attacker success")
dev.off()
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
b <- rep(0, scans) 
for (k in 1:scans){
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
png(filename="1.2.png")
plot(b, xlab="k scans", ylab="attacker success")
dev.off()
round(3.2)
round(3.4)
round(3.5)
mm <- matrix(0, 10, 5)
mm
mm[1,2]
mm[1,3]
mm[1][3]
mm[1,3]
a<- 0:0.01:1
a
a<- 0:0.1:1
a
x <- c(7, 10.5, 21);
x
x<- seq(1:2:5)
x<- seq(1,2,5)
x
seq(4, 12, 2); # Output: 4, 6, 8, 10, 1
vector <- seq(4, 12, 2); 
vector <- seq(0.1, 0.4, 0.05)
vector
v <- seq(0.1, 0.4, 0.05)
v
v.length
length(v)
v <- seq(0.01, 0.4, 0.05)
length(v)
v
v <- seq(0.01, 0.4, 0.02)
v
length(v)
v <- seq(0.01, 0.3, 0.02)
length(v)
v[2]
v[3]
v[1]
v[15]
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
v <- seq(0.01, 0.3, 0.02)
b <- matrix(0, length(v),scans )
for (i in 1:length(v)){
for (k in round(alfa[i]*v):scans){
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
}
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
alfa <- seq(0.01, 0.3, 0.02)
b <- matrix(0, length(v),scans )
for (i in 1:length(v)){
for (k in round(alfa[i]*v):scans){
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
}
b
4097*0.3
4097*0.2
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 900
alfa <- seq(0.01, 0.2, 0.02)
b <- matrix(0, length(v),scans )
for (i in 1:length(v)){
for (k in round(alfa[i]*v):scans){
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
}
b
q()
load("D:\\userdata\\Desktop\\CSC 790 Security Seminar\\project 1\\1.3")
for (i in 1:length(v)){
print(i)
print(alfa[i])
}
length(v)
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 420
alfa <- seq(0.01, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa )){
for (k in round(alfa[i]*v):scans)
{
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
}
b
v
v*alfa
alfa
v*0.09
n=65534
v=4097
nMv = n-v
scans = 370
alfa <- seq(0.01, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa )){
for (k in round(alfa[i]*v):scans)
{
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
}
b
surface3d(b)
surface3d(b[1],b[2])
x <- 1:3
y <- 1:4
z <- matrix(rnorm(12), nrow=3)
persp(x,y,z,col='red')
x
y
z
persp(alfa,scans,b)
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 370
alfa <- seq(0.01, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa )){
for (k in round(alfa[i]*v):scans)
{
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
}
persp(alfa,scans,b, col="red")
b
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 370
alfa <- seq(0.02, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa )){
for (k in round(alfa[i]*v):scans)
{
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
}
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 370
alfa <- seq(0.01, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa)){
for (k in round(alfa[i]*v):scans)
{
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
}
b
source("D:\\userdata\\Desktop\\CSC 790 Security Seminar\\project 1\\1.2.R")
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
b <- rep(0, scans) 
for (k in 1:scans){
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
png(filename="1.2.eps")
plot(b, xlab="k scans", ylab="attacker success")
dev.off()
b
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 370
alfa <- seq(0.01, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa)){
for (k in round(alfa[i]*v):scans)
{
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
if b[i,k]== NaN 
{ b[i,k] <- 0}
}
}
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 370
alfa <- seq(0.01, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa)){
for (k in round(alfa[i]*v):scans)
{
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
if b[i,k]== NaN 
{ b[i,k] = 0}
}
}
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
b <- rep(0, scans) 
for (k in 1:scans){
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
}
postscript("1.2.eps", horizontal = FALSE, height = 5, width = 5);
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 370
alfa <- seq(0.01, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa)){
for (k in round(alfa[i]*v):scans)
{
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
if(is.nan(b[i,k])) 
{ b[i,k] = 0}
}
}
b
persp(alfa,scans,b, col="red")
persp(alfa,scans,b,col="red")
scans
1:scans
y<-1:scans
y
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 370
y<-1:scans
alfa <- seq(0.01, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa)){
for (k in round(alfa[i]*v):scans)
{
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
if(is.nan(b[i,k])) 
{ b[i,k] = 0}
}
}
persp(alfa,y, b,col="red")
persp(alfa,y, b,col="red")
persp(alfa,y, b,col="red")
alfda
alfa
y
b
max(b)
max(b#1.3)
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 3700
y<-1:scans
alfa <- seq(0.01, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa)){
for (k in round(alfa[i]*v):scans)
{
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / choose(65536,k)
}
if(is.nan(b[i,k])) 
{ b[i,k] = 0}
}
}
b
max(b)
#1.3
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 3700
y<-1:scans
alfa <- seq(0.01, 0.1, 0.02)
b <- matrix(0, length(alfa ),scans )
for (i in 1:length(alfa)){
for (k in round(alfa[i]*v):scans)
{
m <- choose(65536,k)
for (x in round(alfa[i]*v):k) {
b[i,k] = b[i,k] + choose(4097,x) * choose(61437,k-x) / m
}
if(is.nan(b[i,k])) 
{ b[i,k] = 0}
}
}
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
b <- rep(0, scans) 
for (k in 1:scans){
m<-choose(65536,k)
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / m
}
}
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
b <- rep(0, scans) 
for (k in 1:scans){
m<-choose(65536,k)
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / m
}
}
postscript("1.2.eps", horizontal = FALSE, height = 5, width = 5);
dev.off()
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
b <- rep(0, scans) 
for (k in 1:scans){
m<-choose(65536,k)
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / m
}
}
postscripts(filename="1.2.eps",horizontal = FALSE, height = 5, width = 5)
plot(b, xlab="k scans", ylab="attacker success")
dev.off()
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
b <- rep(0, scans) 
for (k in 1:scans){
m<-choose(65536,k)
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / m
}
}
postscripts(filename="1.2.eps",horizontal = FALSE, height = 5, width = 5)
plot(b, xlab="k scans", ylab="attacker success")
dev.off()
#1.2
# choose(65536,2)
n=65534
v=4097
nMv = n-v
scans = 150
b <- rep(0, scans) 
for (k in 1:scans){
m<-choose(65536,k)
for (x in 1:k) {
b[k] = b[k] + choose(4097,x) * choose(61437,k-x) / m
}
}
png(filename="1.2.png",horizontal = FALSE, height = 5, width = 5)
plot(b, xlab="k scans", ylab="attacker success")
dev.off()
png(filename="1.2.png", width = 480, height = 480)
plot(b, xlab="k scans", ylab="attacker success")
dev.off()
jpeg(filename="1.2.jpeg", width = 480, height = 480)
plot(b, xlab="k scans", ylab="attacker success")
dev.off()
q()
