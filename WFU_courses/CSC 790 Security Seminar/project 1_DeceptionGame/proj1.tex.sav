%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% E W Fulp  2/2/2014 (CSC 790 Project 1)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\documentclass[10pt]{article}

\usepackage[dvips]{color}
\usepackage{fancybox}
\usepackage{latexsym}
\usepackage{fancyhdr}
\usepackage{subfigure}

\usepackage{slashbox}

 \textwidth=6.5in
 \oddsidemargin=0in
 \evensidemargin=0in
 \topmargin=-0.25in
 \headsep=0in
 \headheight=0in
 \textheight=9.5in

\newcommand{\Questions}[1]{
\subsection*{Questions {\rm \normalsize (\textsf{\textit{#1 points}})}}
}

\pagestyle{fancy}
\rhead{}\chead{}\lhead{}
\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0.4pt}
\cfoot{\shortstack{\textit{\textsf{\footnotesize CSC 790}} \\
\textit{\textsf{\footnotesize Spring 2014}} \\ \thepage}}


\begin{document}

{
 \setlength{\tabcolsep}{0in}
 \noindent
 \begin{tabular*}{\textwidth}{p{5.0in}r}
 \begin{tabular}{l}
 \Large \textbf{CSC 790 A: Project 1} \\
 \Large \textbf{Deception Game} v1.0 \\ \\
 \end{tabular}
 &
  {\renewcommand{\arraystretch}{1.25}
  \setlength{\tabcolsep}{0.1in}
  \begin{tabular}{|l|} \hline
    \textbf{\textsf{Due}} \\ \hline \hline
    \textit{\textsf{12:30pm Thursday, 2/20}} \\ \hline
  \end{tabular}} \\ \\ \hline \hline
\end{tabular*}
}

\section*{Project Description}

\thispagestyle{fancy}

As discussed in class, deception conceals or obscures an entity's existence or attributes so to  intentionally mislead adversaries. Several deception methods for computer systems have been developed and researched; examples include address hopping/shuffling, honeypots,  and honeynets. One aspect of deception that has not been fully considered is the deployment and subsequent management of these methods.  For example given a computer network to protect, what type of deception is best? How often should address shuffling be performed? What is the minimum number of honeypots required to be effective? Will address shuffling and honeypots in combination provide better security? For this project you will develop a mathematical model to analyze the performance of deception to better understand  deployment and management. In other words, the best defense strategies for a set of defense and attacker options.

\section*{Network and Attacker Description}

Assume you are the administrator of a computer network consisting of vulnerable computers (like Fletcher's), secure computers, and empty addresses. The attacker seeks to map your network and find the vulnerable computers using a \textit{scan} which may or may not be followed by an \textit{exploit attempt}. Instead of using specific amounts for the number addresses, number of computer, etc... use  variables. We're creating models after all.

\begin{itemize}
   \item There are $n$ total addresses available to the administrator.
   \item There are $m$ computers in the network, of which $v$ are vulnerable; therefore $v \leq m \leq n$.
   \item The attacker is aware of the address space $n$ and seeks to find at least  $\alpha$ percent of the $v$ vulnerable computers; therefore, $0 < \alpha \leq 1$.
   \item The attacker will try $k$ scans of the network to find vulnerable systems.
\end{itemize}

\section*{Available Deception Techniques}

Several deception techniques are possible, however this assignment will only consider address shuffling and honeypots. Furthermore to help analysis you can ignore some implementation details however you will still need to consider the revenue and costs (administrative and attacker) of each technique. Revenue and costs are difficult to quantify. Identifying the cost of deployment is possible, although there are fixed costs, variable costs, ... \textit{What is the administrative revenue associated with a successful defense?} \textit{What is administrative the cost of a failed defense?} One possible solution is to consider utility instead of actual monetary amounts.

\subsection*{Address Shuffling}

Address shuffling (or hopping, I can't decide) simply replaces a system's IP address with another. Once this occurs attacker reconnaissance information becomes invalid. An important administrative cost to consider is the loss of legitimate connections.

\subsection*{Honeypots}

Honeypots are systems designed to detect unauthorized access. The system mimics an actual computer server and can record the source of an attacker (IP address) and type of exploit. As a result attackers seek to avoid these systems (so there is a high attacker cost). There is also a nontrivial administrative cost associated deploying and managing honeypots.

\section*{Models and Games}

As previously described, you will develop mathematical models of defense strategies for a computer network. Such models are very useful for predicting the performance of a system that cannot be easily tested empirically. Verifying the model with empirical results an important, and necessary step, but will not be done for this assignment.

\textit{What type of model should you consider?}  We are interested in the likelihood of attacker success and given the amount of chance associated with a scan, probabilistic models are probably best suited. For example the NASR paper modeled the probability of attacker success as $\frac{v}{n}$, which is the probability that attacker will randomly scan one of the $v$ vulnerable machines\footnote{In all fairness, the NASR paper defended against hitlist attacks, so there were no scans and as a result their simple model is correct. But how was the list acquired? }. This is a start, but this simple equation does not take into account $k$ scans are probably performed. Specifically each scan can provide the attacker knowledge (for example, whether or not to attempt the address again). If no defense is provided and the attacker can attempt $n$ scans, then the probability that the attacker will find $v$ vulnerable computers is 1. The NASR model does not directly provide this insight.

Developing the probability equations for different scenarios is possible, but perhaps a better approach would associate another known model with the network system. \textit{Can the system be modeled as a dice game?} Selecting a computer to scan (attackers point of view) could be modeled as rolling a $n$ sided die, where each side represents an address. Consider the implication of shuffling and how that would map to a dice game. \textit{Can the system be modeled as a card game, a roulette wheel, keno game\footnote{Maybe not keno, as according to Cody, you never lose in keno.}, ...?}  Using these known models an equation for the attacker success probability can be determined, \textit{I think.}  I hope you will select one model for all the defense strategies.

\subsection*{Applying a Bad Introduction to Game Theory}

This project is interested in determining the best defense strategy given a set of attacker strategies. As such, game theory is best suited for determining the best strategies if they are described mathematically (the point of the previous section). You will consider the system  as a two player (administrator and attacker), non-cooperative, competitive game.

\subsubsection*{Player Actions, Payoffs, and Best Strategies}

Using game theory you must define the actions (strategies) available to each player. For example depending on the question asked in the assignment, the administrator could have the following strategies: do nothing, address shuffling, or honeypot. The attacker may have the option to do nothing, scan, or scan and attempt exploit. Using this information a \textit{payoff} matrix can be developed where the matrix entries are the payoff values for the defender and attacker.  An example payoff matrix is given below.

\begin{center}
\renewcommand{\arraystretch}{1.25}
\begin{tabular} {|c|c|c|c|} \hline
 \backslashbox{Attacker}{Admin} & Static (no deception) & Shuffle & Honeypot  \\ \hline
  Scan & $(E^{d}_{s}, E^{a}_ {s})$ & $(E^{d}_{sh}, E^{a}_{s})$ & $(E^{d}_{h}, E^{a}_{s})$ \\ \hline
  Scan \& Attack & $(E^{d}_{s}, E^{a}_{a})$ & $(E^{d}_{sh}, E^{a}_{a})$ & $(E^{d}_{h}, E^{a}_{a})$ \\ \hline
\end{tabular}
\end{center}

\noindent
The values $E^{i}_{j}$ is the expected payoff for player $i$ using strategy $j$, for example $E^{d}_{s}$ is the expected payoff for the defender using static addressing. This value is dependent on the attacker success probability and can be calculated as
\[
  E^{d}_{s} = (1 - \beta_{s}) \cdot r_{s} - \beta_{s} \cdot c_{s}
\]
where $\beta_{s}$ is the probability the attacker is successful given a static defense, $r_{s}$ is the revenue of the defense, and $c_{s}$ is the cost of the defense. The remaining expected payoffs can be determined in a similar fashion. Using the completed matrix the best strategies (dominate, Nash-equilbria) can be found, \textit{I hope}.

\vfill
\newpage

\section*{Project Requirements}

The deliverable for this project will be a report describing your model (probabilistic and game) and your answers to the following sections. Your report must be written succinctly and neatly (yes, typeset).

\section{Static Addressing}

Develop a model to analyze static addressing which is equivalent to no defense. An important part of the model will be the probability of attacker success ($\beta$) for finding at least $\alpha$ percent of $v$ vulnerable computers in a network of $n$ addresses and $m$ computers total given $k$ attacker scans. Yes, a lot of variables to consider.

\Questions{15}
You must correctly answer the following questions to receive full credit for this part of the project.
\begin{enumerate}
  \item What is the equation for attacker success ($\beta$) for static addressing? Describe the equation and how it correctly models the system.
  \item Assume the attacker only needs to find one vulnerable machine. Graph the attacker success rate as the number of scans ($k$) increases given a  \textbackslash 16 (class B) network, where 25\% of the addresses have machines and 10\% of these machines are vulnerable. Comment on your results.
    \item Provide a 3-D graph of the attacker success rate (z-axis) as the number of scans ($k$, x-axis) and attacker find percentage increases ($\alpha$, y-axis). Assume a  \textbackslash 16 (class B) network, where 25\% of the addresses have machines and 10\% of these machines are vulnerable. Comment on your results.
\end{enumerate}

\section{Address Shuffling}

Develop a model for address shuffling where all $n$ addresses are shuffled. An important part of the model will be the probability of attacker success ($\beta$) for finding $\alpha$ percent of $v$ vulnerable computers. Again, the a network consists of $n$ addresses and $m$ computers, and the attacker can perform $k$ scans. In addition your model should consider the frequency of shuffling denoted as $\gamma$.

Shuffling frequency does imply a temporal component to the model, which is a non-trivial addition. To simplify your initial analysis, you can consider the frequency to be associated with the scan attempts instead of over fixed time intervals (although you can use intervals if you like, \textit{it might be easier}). Therefore $0 \leq \gamma \leq 1$ where $\gamma = 0$ is static addressing and $\gamma = 1$ is \textit{perfect shuffling} which means the addresses are shuffled after each scan attempt. Therefore with \textit{perfect shuffling} given $k$ scans, $k$ shuffles would occur which provides the best shuffle defense but has a very high cost.

\Questions{25}
You must also correctly answer the following questions to receive full credit for this part of the project.
\begin{enumerate}
  \item What is the equation for attacker success ($\beta$) for perfect address shuffling? Describe the equation and how it correctly models the system.
  \item Assume the attacker only needs to find one vulnerable machine and the system is defended with perfect shuffling. Graph the attacker success rate as the number of scans ($k$) increases given a  \textbackslash 16 (class B) network, where 25\% of the addresses have machines and 10\% of these machines are vulnerable. Compare with static addressing and comment on your results.
  \item What is the equation for attacker success ($\beta$) for shuffling with frequency $\gamma$? Describe the equation and how it correctly models the system.
    \item Provide a 3-D graph of the attacker success rate (z-axis) as the number of scans ($k$, x-axis) and shuffling frequency increases ($\gamma$, y-axis). Assume a  \textbackslash 16 (class B) network, where 25\% of the addresses have machines, 10\% of these machines are vulnerable, and the attacker is required to find at least 25\% of the vulnerable computers. Comment on your results.
    \item An interesting question is how many of the addresses should be shuffled. Would only shuffling vulnerable machines with empty addresses provide the same protection as shuffling the entire network? Defend your position, graphs can help the argument.
\end{enumerate}

\section{D-Quan's Dance Groves and Address Shuffling}

Researchers from UNCC created a MT system that relies on Software Defined Networks (SDN) to provide a MT defense. One requirement of their approach is that computers must hop/shuffle in a subnet (which is a portion of the complete network). For this part of the assignment, you will create a model of this approach to determine the defense performance, then compare it to a more traditional notion of address shuffling (defined in the previous section).

Assume the address space consists of $n$ addresses and are divided into $s$ equal subnets. In addition, assume that each subnet will consist of the same number of computers, $\frac{m}{s}$, and vulnerable $\frac{v}{s}$ per subnet, where $m$ and $v$ are multiples of $s$ (so everything divides evenly). Develop a model for subnet address shuffling where all $n$ addresses are shuffled. An important part of the model will be the probability of attacker success ($\beta$) for finding $\alpha$ percent of $v$ vulnerable computers. Again, the attacker can perform $k$ scans. In addition your model should consider the frequency of shuffling denoted as $\gamma$.

\Questions{15}
You must also correctly answer the following questions to receive full credit for this part of the project.
\begin{enumerate}
  \item What is the equation for attacker success ($\beta$) for D-Quan's perfect address shuffling? Describe the equation and how it correctly models the system.
  \item Assume the attacker only needs to find one vulnerable machine and the system is defended with perfect shuffling. Graph the attacker success rate as the number of scans ($k$) increases given a  \textbackslash 16 (class B) network, where 25\% of the addresses have machines and 10\% of these machines are vulnerable. Compare with static addressing and traditional (no subnet) shuffling, then comment on your results.
  \item Is this method better, worse, or the same as traditional shuffling? Are your results consistent with the results reported in the UNCC paper?

\end{enumerate}


\section{Honeypot}

Develop a model for honeypots. In this system the attacker must avoid honeypots, if a honeypot is contacted the attack must stop (very high cost to the attacker). Therefore an important part of the model will be the probability of attacker success ($\beta$) for finding $\alpha$ percent of $v$ vulnerable computers using $k$ scan without contacting any honeypots. This will depend on the number of honeypots deployed which will be denoted as $h$, where $m+h \leq n$.

\Questions{30}
You must also correctly answer the following questions to receive full credit for this part of the project.
\begin{enumerate}
  \item What is the equation for attacker success ($\beta$) for $h$ honeypots? Describe the equation and how it correctly models the system.
  \item Assume the attacker only needs to find one vulnerable machine and the system is defended with honeypots. Graph the attacker success rate as the number of honeypots ($h$) increases given a  \textbackslash 16 (class B) network, where 25\% of the addresses have machines, 10\% of these machines are vulnerable, and the attacker is allowed to scan 10\% of the network. Compare with no defense and shuffling, then comment on your results.
    \item Provide a 3-D graph of the attacker success rate (z-axis) as the number of scans ($k$, x-axis) and number of honeypots increases ($h$, y-axis). Assume a  \textbackslash 16 (class B) network, where 25\% of the addresses have machines, 10\% of these machines are vulnerable, and the attacker is required to find at least 25\% of the vulnerable computers. Comment on your results.
\end{enumerate}

\section{Shuffle or Honeypots}

The probabilities of success for the different defenses can be used to determine the expected payoffs, and complete the payoff matrix. The matrix can then identify the best defense (or attack) strategy given the alternatives. As described earlier, an important part for developing the matrix will be to identify utility values for defenses and attacks. Using a generic security credit, instead of \texttt{US AMERICAN DOOLARS}, can simplify this process. If you decide to take this approach you will need to justify the various values associated with deploying defenses, attempting an attack, attacker success, and defender loss, etc...

\Questions{15}
You must also correctly answer the following questions to receive full credit for this part of the project.
\begin{enumerate}
  \item Assign revenue and cost variables for the different attacks and defenses, then determine the payoff equations and complete the matrix.
  \item Make realistic assumptions about the comparative revenue and costs (for example shuffling is less expensive than honeypots) and determine the best strategies. Comment on your results, note graphs help.
\end{enumerate}


\section*{Solutions}
\subsubsection*{1.1}

Since there are $n$ addresses and are known to the attacker, 
 
\[
  E^{d}_{s} = (1 - \beta_{s}) \cdot r_{s} - \beta_{s} \cdot c_{s}
\]

where 
\subsubsection*{1.1}

\end{document}
